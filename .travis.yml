# Use new container infrastructure to enable caching
sudo: false
# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24
    compiler: ": #cabal ghc-8.0.1"
    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1], sources: [hvr-ghc]}}

  - env: BUILD=cabal GHCVER=8.2.1 CABALVER=2.0
    compiler: ": #cabal ghc-8.2.1"
    addons: {apt: {packages: [cabal-install-2.0,ghc-8.2.1], sources: [hvr-ghc]}}

  - env: BUILD=cabal GHCVER=8.4.3 CABALVER=2.0
    compiler: ": #cabal ghc-8.4.3"
    addons: {apt: {packages: [cabal-install-2.0,ghc-8.4.3], sources: [hvr-ghc]}}

  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head CABALVER=head
    compiler: ": #cabal ghc- HEAD"
    addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-10"
    compiler: ": #stack lts-10 ghc-8.2.2"
    addons: {apt: {packages: [libgmp-dev]}}

  - env: BUILD=stack ARGS="--resolver lts-12"
    compiler: ": #stack lts-12 ghc-8.4.4"
    addons: {apt: {packages: [libgmp-dev]}}

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"
    addons: {apt: {packages: [libgmp-dev]}}

  # Build on OS X in addition to Linux
  - env: BUILD=stack ARGS=""
    compiler: ": #stack default osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-10"
    compiler: ": #stack lts-10 ghc-8.2.2 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver lts-12"
    compiler: ": #stack lts-12 ghc-8.4.4 osx"
    os: osx

  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly osx"
    os: osx

  allow_failures:
  - env: BUILD=cabal GHCVER=head CABALVER=head
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
  - unset CC
  - |
    case "$BUILD" in
      stack)
        export PATH=$HOME/.local/bin:/opt/ghc/$GHCVER/bin:$PATH
        mkdir -p $HOME/.local/bin;
        if [ $(uname) = "Darwin" ]; then
          curl -skL https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin;
        else
          curl -sL https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
        fi
        ;;
      cabal)
        export PATH=$HOME/.cabal/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
        ;;
    esac

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- |
  case "$BUILD" in
    stack)
      stack --no-terminal --install-ghc $ARGS build --test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update
      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1
      ;;
  esac

script:
- |
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS build --test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal configure --enable-tests --enable-benchmarks -v2 --ghc-options="-O0"
      cabal build
      cabal test
      ;;
  esac
